JdbcTemplate（概念和准备）
    1.什么是JdbcTemplate
        (1)Spring框架对JDBC进行了封装，使用JdbcTemplate方便实现对数据库操作
    2.准备工作
        (1)引入相关jar包
        (2)在spring配置文件配置数据库连接池
                <!-- 数据库连接池 -->
                <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
                      destroy-method="close">
                    <property name="url" value="jdbc:mysql:///user_db" />
                    <property name="username" value="root" />
                    <property name="password" value="hlp" />
                    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
                </bean>
        (3)配置JdbcTemplate对象，注入DataSource
        (4)创建service类，创建dao类，在dao注入JdbcTemplate对象

JdbcTemplate操作数据库（添加）
    1.对应数据库创建实体类
    2.编写service和dao
        (1)在dao进行数据库添加操作
        (2)调用JdbcTemplate对象里面update方法实现添加操作
            update有两个参数，第一个参数：sql语句，第二参数：可变参数，设置sql语句中值

JdbcTemplate操作数据库（修改和删除）

JdbcTemplate操作数据库（查询返回某个值）
    1.查询表里有多少条记录，返回是某个值
    2.使用JdbcTemplate实现查询某个值的代码
        jdbcTemplate.queryForObject(String sql, Class<T> requiredType);
        有两个参数，第一个参数：sql语句，第二个参数：返回类型Class

JdbcTemplate操作数据库（查询返回对象）
    1.场景：查询图书详情
    2.JdbcTemplate实现查询返回对象
        jdbcTemplate.queryForObject(String sql, RowMapper<T> rowMapper, Object... args);
        三个参数，第一个：sql语句，第二个：RowMapper是接口，针对要返回的不同类型数据，使用这个接口里面的实现类完成数据封装，
                 第三个：sql语句的参数的具体值

JdbcTemplate操作数据库（查询返回集合）
    1.场景：查询图书列表分页...
    2.调用JdbcTemplate实现查询返回对象
        jdbcTemplate.query(String sql, RowMapper<T> rowMapper, Object... args);

JdbcTemplate操作数据库（批量操作）
    1.批量操作：操作表内多条记录
    2.JdbcTemplate实现批量添加操作
        batchUpdate(String sql, List<Object[]> batchArgs);
        有两个参数，第一个参数：sql语句，第二个参数：list集合，添加多条记录的数据

JdbcTemplate操作数据库（批量修改）
    1.
